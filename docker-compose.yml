version: "3.7"

services:
  product-service:
    ports:
      - "3000-3001:${SERVICE_PORT}"
    build:
      context: ./
      dockerfile: docker/product-service/Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    restart: unless-stopped
    depends_on:
      - postgres
      - cache
      - rabbitmq

  review-processing-service:
    ports:
      - "4000-4001:${SERVICE_PORT}"
    build:
      context: ./
      dockerfile: docker/review-processing-service/Dockerfile
    deploy:
      mode: replicated
      replicas: 2
    restart: unless-stopped
    depends_on:
      - postgres
      - cache
      - rabbitmq

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - product-service
      - review-processing-service
    ports:
      - "80:80"

  postgres:
    image: "postgres:14.5"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_DB: "${DB_DATABASE}"

  cache:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_HOST: "${REDIS_HOST}"
      REDIS_PORT: "${REDIS_PORT}"
      REDIS_USER: "${REDIS_USER}"
      REDIS_PASSWORD: "${REDIS_PASSWORD}"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672

